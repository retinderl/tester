-- ************************************* SqlDBM: BigQuery ************************************
-- * Generated by SqlDBM: Google Big Query Webinar, v32 vs v29 by retinder.labana@sqldbm.com *

DECLARE fkName string;
DECLARE sql string;
SET fkName = (SELECT DISTINCT KEY_COLUMN_USAGE.constraint_name
FROM ABC.operations.INFORMATION_SCHEMA.KEY_COLUMN_USAGE 
JOIN ABC.operations.INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE USING(constraint_catalog, constraint_schema, constraint_name)
WHERE KEY_COLUMN_USAGE.table_name = 'fact_sales' AND CONSTRAINT_COLUMN_USAGE.table_name IN ('dim_customer') AND (KEY_COLUMN_USAGE.column_name = 'customer_id' AND KEY_COLUMN_USAGE.ordinal_position = 1)
GROUP BY CONSTRAINT_COLUMN_USAGE.column_name, KEY_COLUMN_USAGE.constraint_name
HAVING COUNT(CONSTRAINT_COLUMN_USAGE.column_name) = 1 LIMIT 1);
set sql = CONCAT('ALTER TABLE `ABC.operations`.`fact_sales` DROP CONSTRAINT ','`', REPLACE(fkName, 'fact_sales.', ''), '`');
EXECUTE IMMEDIATE sql;

SET fkName = (SELECT DISTINCT KEY_COLUMN_USAGE.constraint_name
FROM ABC.operations.INFORMATION_SCHEMA.KEY_COLUMN_USAGE 
JOIN ABC.operations.INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE USING(constraint_catalog, constraint_schema, constraint_name)
WHERE KEY_COLUMN_USAGE.table_name = 'fact_sales' AND CONSTRAINT_COLUMN_USAGE.table_name IN ('dim_product') AND (KEY_COLUMN_USAGE.column_name = 'product_id' AND KEY_COLUMN_USAGE.ordinal_position = 1)
GROUP BY CONSTRAINT_COLUMN_USAGE.column_name, KEY_COLUMN_USAGE.constraint_name
HAVING COUNT(CONSTRAINT_COLUMN_USAGE.column_name) = 1 LIMIT 1);
set sql = CONCAT('ALTER TABLE `ABC.operations`.`fact_sales` DROP CONSTRAINT ','`', REPLACE(fkName, 'fact_sales.', ''), '`');
EXECUTE IMMEDIATE sql;

SET fkName = (SELECT DISTINCT KEY_COLUMN_USAGE.constraint_name
FROM operations.INFORMATION_SCHEMA.KEY_COLUMN_USAGE 
JOIN operations.INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE USING(constraint_catalog, constraint_schema, constraint_name)
WHERE KEY_COLUMN_USAGE.table_name = 'fact_inventory' AND CONSTRAINT_COLUMN_USAGE.table_name IN ('dim_location') AND (KEY_COLUMN_USAGE.column_name = 'location_id' AND KEY_COLUMN_USAGE.ordinal_position = 1)
GROUP BY CONSTRAINT_COLUMN_USAGE.column_name, KEY_COLUMN_USAGE.constraint_name
HAVING COUNT(CONSTRAINT_COLUMN_USAGE.column_name) = 1 LIMIT 1);
set sql = CONCAT('ALTER TABLE `operations`.`fact_inventory` DROP CONSTRAINT ','`', REPLACE(fkName, 'fact_inventory.', ''), '`');
EXECUTE IMMEDIATE sql;

SET fkName = (SELECT DISTINCT KEY_COLUMN_USAGE.constraint_name
FROM operations.INFORMATION_SCHEMA.KEY_COLUMN_USAGE 
JOIN operations.INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE USING(constraint_catalog, constraint_schema, constraint_name)
WHERE KEY_COLUMN_USAGE.table_name = 'fact_inventory' AND CONSTRAINT_COLUMN_USAGE.table_name IN ('dim_product') AND (KEY_COLUMN_USAGE.column_name = 'product_id' AND KEY_COLUMN_USAGE.ordinal_position = 1)
GROUP BY CONSTRAINT_COLUMN_USAGE.column_name, KEY_COLUMN_USAGE.constraint_name
HAVING COUNT(CONSTRAINT_COLUMN_USAGE.column_name) = 1 LIMIT 1);
set sql = CONCAT('ALTER TABLE `operations`.`fact_inventory` DROP CONSTRAINT ','`', REPLACE(fkName, 'fact_inventory.', ''), '`');
EXECUTE IMMEDIATE sql;

-- ************************************** table_21

CREATE TABLE table_21
(
created_by string NOT NULL OPTIONS(description = 'user who created the entery'), 
created_on timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') 
)
OPTIONS(friendly_name = 'table_21');

ALTER TABLE operations.fact_inventory
ADD CONSTRAINT FK_fact_inventory_2 FOREIGN KEY (location_id) REFERENCES operations.dim_location (location_id) NOT ENFORCED;

ALTER TABLE operations.fact_inventory
ADD CONSTRAINT FK_fact_inventory_1 FOREIGN KEY (product_id) REFERENCES operations.dim_product (product_id) NOT ENFORCED;

ALTER TABLE operations.fact_sales
ADD CONSTRAINT FK_fact_sales_1 FOREIGN KEY (customer_id) REFERENCES operations.dim_customer (customer_id) NOT ENFORCED;

ALTER TABLE operations.fact_sales
ADD CONSTRAINT FK_fact_sales_2 FOREIGN KEY (product_id) REFERENCES operations.dim_product (product_id) NOT ENFORCED;