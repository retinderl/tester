-- ******************************* SqlDBM: BigQuery ******************************
-- * Generated by SqlDBM: Google Big Query Webinar by retinder.labana@sqldbm.com *



-- ************************************** table_21

CREATE TABLE table_21
(
created_by string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite"
)
OPTIONS(friendly_name = 'table_21');


-- ************************************** serge.strct_tbl

CREATE TABLE serge.strct_tbl
(
strct_tbl_id int64 OPTIONS(description = 'An optional INTEGER field'),
struct_col   struct<a array<string> OPTIONS(description = 'A repeated STRING field'), b bool>
)
 PARTITION BY  _PARTITIONDATE 
OPTIONS(expiration_timestamp = TIMESTAMP "2025-01-01T00:00:00.000Z",
partition_expiration_days = 1,
description = 'a table that expires in 2025, with each partition living for 24 hours',
friendly_name = 'strct_tbl');


-- ************************************** operations.dim_time

CREATE TABLE operations.dim_time
(
time_id       int64 PRIMARY KEY NOT ENFORCED,
date          date,
hour          int64,
day_of_week   string,
time_segments array<struct<start_time time, end_time time>>
)
OPTIONS(friendly_name = 'time');


-- ************************************** ABC.operations.dim_time

CREATE TABLE ABC.operations.dim_time
(
date          date,
hour          int64,
day_of_week   string,
time_segments struct<start_time time, end_time struct<start_time time, end_time array<struct<start_time time, end_time time>>>>,
created_by    string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on    timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite"
)
OPTIONS(friendly_name = 'time');


-- ************************************** ABC.operations.dim_supplier

CREATE TABLE ABC.operations.dim_supplier
(
supplier_id    int64,
supplier_name  string,
contact_person string,
address        struct<street string, city string, state string, country string>,
payment_terms  array<string>,
created_by     string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on     timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite"
)
OPTIONS(friendly_name = 'supplier');


-- ************************************** ABC.operations.dim_product

CREATE TABLE ABC.operations.dim_product
(
product_id   int64 NOT NULL PRIMARY KEY NOT ENFORCED,
product_name string,
category     string,
price        float64,
attributes   struct<weight float64, dimensions struct<length float64, width float64, height float64>>,
created_by   string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on   timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite"
)
OPTIONS(friendly_name = 'product');


-- ************************************** ABC.operations.dim_location

CREATE TABLE ABC.operations.dim_location
(
location_id int64 NOT NULL PRIMARY KEY NOT ENFORCED,
country     string,
city        string,
coordinates struct<latitude float64, longitude float64>,
created_by  string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on  timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite"
)
OPTIONS(friendly_name = 'location');


-- ************************************** ABC.operations.dim_employee

CREATE TABLE ABC.operations.dim_employee
(
employee_id   int64 NOT NULL PRIMARY KEY NOT ENFORCED,
employee_name string,
role          string,
skills        array<string>,
created_by    string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on    timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite"
)
OPTIONS(friendly_name = 'dim employee');


-- ************************************** ABC.operations.dim_customer

CREATE TABLE ABC.operations.dim_customer
(
customer_id   int64 NOT NULL PRIMARY KEY NOT ENFORCED,
customer_name string,
email         string,
address       string,
contact_info  struct<phone_number string, social_media array<string>>,
created_by    string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on    timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite"
)
 PARTITION BY  RANGE_BUCKET(customer_id, GENERATE_ARRAY(1, 1000, 50)) 
OPTIONS(expiration_timestamp = 2025-02-03 12:34:56,
require_partition_filter = true,
friendly_name = 'customer');


-- ************************************** ABC.operations.dim_channel

CREATE TABLE ABC.operations.dim_channel
(
channel_id   int64 NOT NULL PRIMARY KEY NOT ENFORCED,
channel_name string,
demographics struct<age int64, gender struct<age int64, gender array<struct<age int64, gender string>>>>,
created_by   string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on   timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite"
)
OPTIONS(friendly_name = 'channel');


-- ************************************** ABC.operations.dim_category

CREATE TABLE ABC.operations.dim_category
(
category_id   int64 NOT NULL PRIMARY KEY NOT ENFORCED,
category_name string,
description   string,
subcategories array<string>,
created_by    string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on    timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite"
)
OPTIONS(friendly_name = 'category');


-- ************************************** `serge.d-1`

CREATE TABLE `serge.d-1`
(
id   int64 NOT NULL PRIMARY KEY NOT ENFORCED,
name string
)
OPTIONS(friendly_name = 'd-1');


-- ************************************** `serge_caseInsens.d-1`

CREATE TABLE `serge_caseInsens.d-1`
(
id   int64 NOT NULL PRIMARY KEY NOT ENFORCED,
Name string
)
OPTIONS(friendly_name = 'd-1');


-- ************************************** serge.d1

CREATE TABLE serge.d1
(
id   int64 NOT NULL PRIMARY KEY NOT ENFORCED,
name string
)
OPTIONS(friendly_name = 'd1');


-- ************************************** operations.dim_supplier

CREATE TABLE operations.dim_supplier
(
supplier_id    int64,
supplier_name  string,
contact_person string,
address        struct<street string, city string, state string, country string>,
payment_terms  array<string>
)
OPTIONS(friendly_name = 'supplier');


-- ************************************** operations.dim_product

CREATE TABLE operations.dim_product
(
product_id   int64 PRIMARY KEY NOT ENFORCED,
product_name string,
category     string,
price        float64,
attributes   struct<weight float64, dimensions struct<length float64, width float64, height float64>>
)
OPTIONS(friendly_name = 'product');


-- ************************************** operations.dim_location

CREATE TABLE operations.dim_location
(
location_id int64 PRIMARY KEY NOT ENFORCED,
country     string,
city        string,
coordinates struct<latitude float64, longitude float64>
)
OPTIONS(friendly_name = 'location');


-- ************************************** operations.dim_employee

CREATE TABLE operations.dim_employee
(
employee_id   int64 PRIMARY KEY NOT ENFORCED,
employee_name string,
role          string,
skills        array<string>
)
OPTIONS(friendly_name = 'employee');


-- ************************************** operations.dim_customer

CREATE TABLE operations.dim_customer
(
customer_id   int64 PRIMARY KEY NOT ENFORCED,
customer_name string,
email         string,
address       string,
contact_info  struct<phone_number string, social_media array<string>>
)
OPTIONS(friendly_name = 'customer');


-- ************************************** operations.dim_channel

CREATE TABLE operations.dim_channel
(
channel_id   int64 PRIMARY KEY NOT ENFORCED,
channel_name string,
demographics array<struct<age int64, gender string>>
)
OPTIONS(friendly_name = 'channel');


-- ************************************** operations.dim_category

CREATE TABLE operations.dim_category
(
category_id   int64,
category_name string,
description   string,
subcategories array<string>
)
OPTIONS(friendly_name = 'category');


-- ************************************** ABC.operations.fact_sales

CREATE TABLE ABC.operations.fact_sales
(
sale_id     int64 NOT NULL PRIMARY KEY NOT ENFORCED,
quantity    int64,
price       float64,
customer_id int64,
product_id  int64,
created_by  string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on  timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite",
 CONSTRAINT FK_fact_sales_1 FOREIGN KEY (customer_id) REFERENCES ABC.operations.dim_customer (customer_id) NOT ENFORCED,
 CONSTRAINT FK_fact_sales_2 FOREIGN KEY (product_id) REFERENCES ABC.operations.dim_product (product_id) NOT ENFORCED
)
OPTIONS(friendly_name = 'sales');


-- ************************************** ABC.operations.fact_inventory

CREATE TABLE ABC.operations.fact_inventory
(
inventory_id int64 NOT NULL PRIMARY KEY NOT ENFORCED,
quantity     int64,
location_id  int64,
product_id   int64,
created_by   string NOT NULL OPTIONS(description = 'user who created the entery'), -- From template: "meta_data_inherite"
created_on   timestamp NOT NULL OPTIONS(description = 'timestamps when the entry was created') -- From template: "meta_data_inherite",
 CONSTRAINT FK_fact_inventory_2 FOREIGN KEY (location_id) REFERENCES ABC.operations.dim_location (location_id) NOT ENFORCED,
 CONSTRAINT FK_fact_inventory_1 FOREIGN KEY (product_id) REFERENCES ABC.operations.dim_product (product_id) NOT ENFORCED
)
OPTIONS(friendly_name = 'inventory');


-- ************************************** operations.fact_sales

CREATE TABLE operations.fact_sales
(
sale_id     int64 PRIMARY KEY NOT ENFORCED,
customer_id int64,
product_id  int64,
time_id     int64,
quantity    int64,
price       float64,
 CONSTRAINT FK_fact_sales_1 FOREIGN KEY (customer_id) REFERENCES operations.dim_customer (customer_id) NOT ENFORCED,
 CONSTRAINT FK_fact_sales_2 FOREIGN KEY (product_id) REFERENCES operations.dim_product (product_id) NOT ENFORCED,
 CONSTRAINT FK_fact_sales_3 FOREIGN KEY (time_id) REFERENCES operations.dim_time (time_id) NOT ENFORCED
)
OPTIONS(friendly_name = 'fact sales');


-- ************************************** operations.fact_inventory

CREATE TABLE operations.fact_inventory
(
inventory_id int64 PRIMARY KEY NOT ENFORCED,
product_id   int64,
location_id  int64,
quantity     int64,
 CONSTRAINT FK_fact_inventory_1 FOREIGN KEY (product_id) REFERENCES operations.dim_product (product_id) NOT ENFORCED,
 CONSTRAINT FK_fact_inventory_2 FOREIGN KEY (location_id) REFERENCES operations.dim_location (location_id) NOT ENFORCED
)
OPTIONS(friendly_name = 'inventory');

-- ************************************** view_1
CREATE VIEW view_1
AS (
  -- Please type query_expression here
);

